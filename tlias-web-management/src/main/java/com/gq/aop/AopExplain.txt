AOP（面向切面编程）：其实就是面向特定方法编程
    实现：动态代理是面向切面编程最主流的实现。而SpringAOP是Spring框架的高级技术，旨在管理bean对象的过程中，主要通过底层的动态代理机制，
    对特定的方法进行编程
    连接点：JoinPoint，可以被AOP控制的方法（暗含方法执行时的相关信息）
    通知：Advice，指哪些重复的逻辑，也就是共性功能（最终体现为一个方法）
    切入点：PointCut，匹配连接点的条件，通知仅会在切入点方法执行时被应用
    切面：Aspect，描述通知与切入点的对应关系（通知+切入点）
    AOP通知类型：
        1、@Around：环绕通知，此注解标注的通知方法在目标方法前、后都被执行
        2、@Before：前置通知，此注解标注的通知方法在目标方法前被执行
        3、@After：后置通知，此注解标注的通知方法在目标方法后被执行，无论是否有异常都会执行
        4、@AfterReturning：返回后通知，此注解标注的通知方法在目标方法后被执行，有异常不会执行
        5、@AfterThrowing：异常后通知，此注解标注的通知方法发生异常后执行